######################################
###### Dockerfile for Cobra
######################################
FROM nvcr.io/nvidia/cuda:11.4.0-devel-ubuntu20.04
LABEL maintainer="gogojjh <jiaojh1994@gmail.com>"

############### Basic Ubuntu command
RUN mkdir -p /usr/app
RUN apt-get update && apt-get install -y \
  libatlas-base-dev \
  libeigen3-dev \
  libgoogle-glog-dev \
  libsuitesparse-dev \
  libtool \
  libgoogle-glog-dev \
  libgtest-dev \
  curl \
  libsqlite3-dev \
  ssh \
  git \
  jq \
  gnupg \
  apt-utils \
  software-properties-common \
  build-essential \
  nfs-common \
  locate \
  vim \
  git \
  gdb
RUN apt install -y \
  cmake 

# Install catkin_build
RUN apt-get install -y wget 
RUN wget http://packages.ros.org/ros.key -O - |  apt-key add - 
RUN apt-get -y install python3-catkin-tools

# Install ROS-Noetic
RUN sh -c '. /etc/lsb-release && echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
RUN apt update && apt install -y \
  ros-noetic-ros-base
RUN source /opt/ros/noetic/setup.bash
RUN apt install -y \
  python3-rosdep \
  python3-rosinstall \
  python3-rosinstall-generator \
  python3-wstool \
  build-essential \
  python3-rosdep
RUN rosdep init && rosdep update

############### Nvblox (Mapping)
# TZData goes first.
RUN apt-get update
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Beijing
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
# Need to install on the terminal
# RUN apt-get -y install tzdata

# Install gtest
RUN cd /usr/app && git clone https://github.com/google/googletest
RUN cd /usr/app/googletest && cmake . && cmake --build . --target install
ENV DEBIAN_FRONTEND teletype

############### R3LIVE (SLAM)
RUN apt-get update && apt-get install -y \
  ros-${ROS_DISTRO}-pcl-ros \
  ros-${ROS_DISTRO}-tf-conversions \
  ros-${ROS_DISTRO}-eigen-conversions \
  ros-${ROS_DISTRO}-image-geometry \
  ros-${ROS_DISTRO}-camera-info-manager \
  ros-${ROS_DISTRO}-image-view \
  ros-${ROS_DISTRO}-cv-bridge \
  ros-${ROS_DISTRO}-tf \
  ros-${ROS_DISTRO}-tf2 \
  ros-${ROS_DISTRO}-tf2-eigen \
  ros-${ROS_DISTRO}-tf2-ros \
  ros-${ROS_DISTRO}-message-filters \
  ros-${ROS_DISTRO}-image-transport \
  ros-${ROS_DISTRO}-image-transport* 

# Install Python apt dependencies
RUN apt-get install --no-install-recommends -y \
  python3 \
  python3-numpy \
  python3-pip \
  python3-vcstool \
  && rm -rf /var/lib/apt/lists/*

# Install Python pip dependencies
RUN pip3 install --upgrade pip
RUN pip3 install --upgrade \
  numpy \
  pytest \
  setuptools \
  twine \
  opencv-python

# Install R3LIVE-related packages
RUN git clone https://github.com/Livox-SDK/Livox-SDK.git \
  && cd Livox-SDK && cd build && cmake .. && make -j4 && make install\
  && rm -r ../../Livox-SDK

RUN apt update
RUN apt-get install -y libcgal-dev pcl-tools
RUN apt-get install -y libopencv-dev python3-opencv

RUN mv /usr/include/flann/ext/lz4.h /usr/include/flann/ext/lz4.h.bck
RUN mv /usr/include/flann/ext/lz4hc.h /usr/include/flann/ext/lz4hc.h.bck
RUN ln -s /usr/include/lz4.h /usr/include/flann/ext/lz4.h
RUN ln -s /usr/include/lz4hc.h /usr/include/flann/ext/lz4hc.h

############### Segnet (Segmentation)
ENV DEBIAN_FRONTEND noninteractive
RUN apt update && apt install -y --no-install-recommends \
  git curl wget zsh tmux vim g++

RUN apt-get install -y \
  ros-${ROS_DISTRO}-ros-numpy \
  ros-${ROS_DISTRO}-vision-msgs

COPY segnet/requirements.txt /usr/app/segnet_requirements.txt
RUN pip3 install -r /usr/app/segnet_requirements.txt

############### Hybrid A* (Path Planning)

############### Tools